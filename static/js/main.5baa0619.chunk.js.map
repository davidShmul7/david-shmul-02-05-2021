{"version":3,"sources":["components/MainHeader/MainHeader.layout.js","components/search/SearchLocation.layout.js","api/getLocationByAutoComplete.api.js","api/getCurrentConditions.api.js","api/getDailyForecasts.js","components/DailyForecast/DailyForecast.layout.js","utils/getDayName.js","utils/convertFerToCel.js","redux/actions/index.js","components/Weather/WeatherDetails.layout.js","components/Favorites/Favorite/Favorite.layout.js","components/Favorites/Favorites.layout.js","containers/App.js","reportWebVitals.js","redux/reducers/favorites.js","redux/reducers/index.js","index.js"],"names":["MainHeader","props","useState","activeBtn","setActiveBtn","useEffect","currentPage","handleNavigation","selectedPage","clicked","className","onClick","href","SearchLocation","searchInput","useRef","ref","type","placeholder","value","getLocationByAutoComplete","a","searchText","endpoint","fetch","response","json","data","Key","LocalizedName","locationKey","city","console","error","getCurrentConditions","getDailyForecasts","DailyForecast","day","temperature","getDayName","dateVal","Date","toLocaleDateString","weekday","convertFerToCel","celcius","tempVal","Math","round","updateFavorites","locations","payload","WeatherDetails","cityVal","setCityVal","temperatureVal","setTemperatureVal","weatherVal","setWeatherVal","setLocationKey","dailyForecastList","setDailyForecastList","favoritesBtnText","setfavoritesBtnText","isLocationInFavorites","setIsLocationInFavorites","locationsInFavorites","useSelector","state","inFavorites","dispatch","useDispatch","current","location","id","WeatherText","handleSearch","_isLocationInFavorites","some","loc","then","locationDetails","currentConditions","Temperature","Metric","Value","DailyForecastsObj","DailyForecasts","favoritesLocationsArr","filter","currentLocation","weather","push","handleAddRemoveFavorites","map","dailyForecast","index","Maximum","Favorite","name","Favorites","locationsList","App","setCurrentPage","selectedLocation","setSelectedLocation","navState","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","favoritesReducer","action","allReducers","combineReducers","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5baa0619.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./MainHeader.style.css\";\r\n\r\nconst MainHeader = (props) => {\r\n  const [activeBtn, setActiveBtn] = useState(\"home\");\r\n\r\n  useEffect(() => {\r\n    setActiveBtn(props.currentPage);\r\n  }, [props.currentPage]);\r\n\r\n  const handleNavigation = (selectedPage) => {\r\n    setActiveBtn(selectedPage);\r\n    props.clicked(selectedPage);\r\n  };\r\n\r\n  return (\r\n    <header className=\"site-header\">\r\n      <div className=\"wrapper site-header__wrapper\">\r\n        <h3 className=\"title\">What's the Weather ?</h3>\r\n        <nav className=\"navHome\">\r\n          <a\r\n            className={activeBtn === \"home\" ? \"home\" : \"\"}\r\n            onClick={() => handleNavigation(\"home\")}\r\n            href=\"#\"\r\n          >\r\n            Home\r\n          </a>\r\n          <a\r\n            className={activeBtn === \"favorites\" ? \"favorites\" : \"\"}\r\n            onClick={() => handleNavigation(\"favorites\")}\r\n            href=\"#\"\r\n          >\r\n            Favorites\r\n          </a>\r\n        </nav>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default MainHeader;\r\n","import React, { useRef } from \"react\";\r\nimport \"./SearchLocation.style.css\";\r\n\r\nconst SearchLocation = (props) => {\r\n  const searchInput = useRef(null);\r\n  return (\r\n    <div className=\"searchContainer\">\r\n      <div className=\"searchLocation\">\r\n        <input ref={searchInput} type=\"text\" placeholder=\"search\"></input>\r\n        <input\r\n          type=\"button\"\r\n          onClick={() => props.clicked(searchInput)}\r\n          value=\"Search\"\r\n          className=\"search-button\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchLocation;\r\n","import fetch from \"isomorphic-fetch\";\r\n\r\n/**\r\n * Description\r\n * Returns basic information about locations matching an autocomplete of the search text.\r\n *\r\n * @param {string} apiKey\r\n * @param {string} searchText\r\n */\r\nexport const getLocationByAutoComplete = async ({ searchText }) => {\r\n  const apiKey = \"nksorniD02MKyprdzS4Yq3AahnJdFFMu\";\r\n  const endpoint = `http://dataservice.accuweather.com/locations/v1/cities/autocomplete?apikey=${apiKey}&q=${searchText}`;\r\n\r\n  try {\r\n    const response = await fetch(endpoint);\r\n    const data = await response.json();\r\n    const { Key, LocalizedName } = data[0];\r\n\r\n    return { locationKey: Key, city: LocalizedName } || {};\r\n  } catch (error) {\r\n    console.error(\"error\", error);\r\n    return {};\r\n  }\r\n};\r\n","import fetch from \"isomorphic-fetch\";\r\n//import { currentCondtionsResponse } from \"../assets/data/currentConditionsResponse\";\r\n\r\n/**\r\n * Description\r\n * Returns current conditions data for a specific location\r\n * @param {string} apiKey\r\n * @param {string} locationKey\r\n */\r\nexport const getCurrentConditions = async ({ locationKey }) => {\r\n  const apiKey = \"nksorniD02MKyprdzS4Yq3AahnJdFFMu\";\r\n  const endpoint = `http://dataservice.accuweather.com/currentconditions/v1/${locationKey}?apikey=${apiKey}`;\r\n\r\n  try {\r\n    const response = await fetch(endpoint);\r\n    const data = await response.json();\r\n\r\n    return data[0] || {};\r\n  } catch (error) {\r\n    console.error(\"error\", error);\r\n    return {};\r\n  }\r\n};\r\n","import fetch from \"isomorphic-fetch\";\r\n\r\n/**\r\n * Description\r\n * Returns current conditions data for a specific location\r\n * @param {string} apiKey\r\n * @param {string} locationKey\r\n */\r\nexport const getDailyForecasts = async ({ locationKey }) => {\r\n  const apiKey = \"nksorniD02MKyprdzS4Yq3AahnJdFFMu\";\r\n  const endpoint = `http://dataservice.accuweather.com/forecasts/v1/daily/5day/${locationKey}?apikey=${apiKey}`;\r\n\r\n  try {\r\n    const response = await fetch(endpoint);\r\n    const data = await response.json();\r\n\r\n    return data || {};\r\n  } catch (error) {\r\n    console.error(\"error\", error);\r\n    return {};\r\n  }\r\n};\r\n","import React, { Fragment } from \"react\";\r\n\r\nconst DailyForecast = (props) => {\r\n  return (\r\n    <Fragment>\r\n      <div className=\"forcastWeather\">\r\n        <p>{props.day}</p>\r\n        <p>{props.temperature}</p>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default DailyForecast;\r\n","export const getDayName = ({ dateVal }) => {\r\n  let date = new Date(dateVal);\r\n  return date.toLocaleDateString(\"en-US\", { weekday: \"short\" });\r\n};\r\n","export const convertFerToCel = ({ tempVal }) => {\r\n  const celcius = ((tempVal - 32) * 5) / 9;\r\n  return Math.round(celcius);\r\n};\r\n","export const updateFavorites = (locations) => {\r\n  return {\r\n    type: \"UPDATE_FAVORITES\",\r\n    payload: locations,\r\n  };\r\n};\r\n","import React, { Fragment, useEffect } from \"react\";\r\nimport \"./WeatherDetails.style.css\";\r\nimport SearchLocation from \"../search/SearchLocation.layout\";\r\nimport { useState } from \"react/cjs/react.development\";\r\nimport { getLocationByAutoComplete } from \"../../api/getLocationByAutoComplete.api\";\r\nimport { getCurrentConditions } from \"../../api/getCurrentConditions.api\";\r\nimport { getDailyForecasts } from \"../../api/getDailyForecasts\";\r\nimport DailyForecast from \"../DailyForecast/DailyForecast.layout\";\r\nimport { getDayName } from \"../../utils/getDayName\";\r\nimport { convertFerToCel } from \"../../utils/convertFerToCel\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { updateFavorites } from \"../../redux/actions/index\";\r\n\r\nconst WeatherDetails = (props) => {\r\n  const [cityVal, setCityVal] = useState(\"\");\r\n  const [temperatureVal, setTemperatureVal] = useState(\"\");\r\n  const [weatherVal, setWeatherVal] = useState(\"\");\r\n  const [locationKey, setLocationKey] = useState(\"\");\r\n  const [dailyForecastList, setDailyForecastList] = useState();\r\n  const [favoritesBtnText, setfavoritesBtnText] = useState(\"Add To Favorites\");\r\n  const [isLocationInFavorites, setIsLocationInFavorites] = useState();\r\n  const locationsInFavorites = useSelector((state) => state.inFavorites);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    const searchInput = {\r\n      current: {\r\n        value: \"Tel Aviv\",\r\n      },\r\n    };\r\n\r\n    if (props.location) {\r\n      setLocationKey(props.location.id);\r\n      setCityVal(props.location.city);\r\n      setTemperatureVal(props.location.temperature);\r\n      setWeatherVal(props.location.WeatherText);\r\n      searchInput.current.value = props.location.city;\r\n    }\r\n    handleSearch(searchInput);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let _isLocationInFavorites = locationsInFavorites\r\n      ? locationsInFavorites.some((loc) => loc.id === locationKey)\r\n      : false;\r\n    _isLocationInFavorites\r\n      ? setfavoritesBtnText(\"Remove from Favorites\")\r\n      : setfavoritesBtnText(\"Add To Favorites\");\r\n    setIsLocationInFavorites(_isLocationInFavorites);\r\n  });\r\n\r\n  const handleSearch = (searchInput) => {\r\n    const searchText = searchInput.current.value;\r\n    getLocationByAutoComplete({ searchText })\r\n      .then((locationDetails) => {\r\n        const { city, locationKey } = locationDetails;\r\n        setCityVal(city);\r\n        setLocationKey(locationKey);\r\n        return locationKey;\r\n      })\r\n      .then((locationKey) => {\r\n        getCurrentConditions({ locationKey }).then((currentConditions) => {\r\n          const { Temperature, WeatherText } = currentConditions;\r\n          const temperature = Temperature ? Temperature.Metric.Value : \"\";\r\n          setTemperatureVal(temperature);\r\n          setWeatherVal(WeatherText);\r\n        });\r\n        getDailyForecasts({ locationKey }).then((DailyForecastsObj) => {\r\n          setDailyForecastList(DailyForecastsObj.DailyForecasts);\r\n        });\r\n      });\r\n  };\r\n\r\n  const handleAddRemoveFavorites = () => {\r\n    let favoritesLocationsArr = [...locationsInFavorites];\r\n\r\n    if (isLocationInFavorites) {\r\n      favoritesLocationsArr = favoritesLocationsArr.filter(\r\n        (loc) => loc.id !== locationKey\r\n      );\r\n\r\n      dispatch(updateFavorites(favoritesLocationsArr));\r\n    } else {\r\n      const currentLocation = {\r\n        id: locationKey,\r\n        city: cityVal,\r\n        temperature: temperatureVal,\r\n        weather: weatherVal,\r\n      };\r\n\r\n      favoritesLocationsArr.push(currentLocation);\r\n      dispatch(updateFavorites(favoritesLocationsArr));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <SearchLocation clicked={handleSearch} />\r\n      <div className=\"mainContainer\">\r\n        <div className=\"containerTop\">\r\n          <div className=\"currentWeather\">\r\n            <label>City: {cityVal}</label>\r\n            <br />\r\n            <label>Temperature: {temperatureVal}</label>\r\n          </div>\r\n          <div className=\"addToFavorites\">\r\n            <button onClick={() => handleAddRemoveFavorites()}>\r\n              {favoritesBtnText}\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div className=\"labelContainer\">\r\n          <div className=\"weatherLabel\">\r\n            <h1>{weatherVal}</h1>\r\n          </div>\r\n        </div>\r\n        <div className=\"forcastContainer\">\r\n          {dailyForecastList &&\r\n            dailyForecastList.map((dailyForecast, index) => {\r\n              const dateVal = dailyForecast.Date;\r\n              const tempVal = dailyForecast.Temperature.Maximum.Value;\r\n              return (\r\n                <DailyForecast\r\n                  key={index}\r\n                  day={getDayName({ dateVal })}\r\n                  temperature={convertFerToCel({ tempVal })}\r\n                />\r\n              );\r\n            })}\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default WeatherDetails;\r\n","import React, { Fragment } from \"react\";\r\n\r\nconst Favorite = (props) => {\r\n  return (\r\n    <Fragment>\r\n      <div\r\n        id={props.id}\r\n        name=\"\"\r\n        className=\"favoritesWeather\"\r\n        onClick={props.clicked}\r\n      >\r\n        <div>\r\n          <p>{props.city}</p>\r\n          <p>{props.temperature}</p>\r\n          <p>{props.weather}</p>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Favorite;\r\n","import React from \"react\";\r\nimport \"./Favorites.style.css\";\r\nimport Favorite from \"../Favorites/Favorite/Favorite.layout\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst Favorites = (props) => {\r\n  const locationsList = useSelector((state) => state.inFavorites);\r\n\r\n  return (\r\n    <div className=\"mainFavoritesContainer\">\r\n      {locationsList &&\r\n        locationsList.map((location) => {\r\n          return (\r\n            <Favorite\r\n              id={location.id}\r\n              city={location.city}\r\n              temperature={location.temperature}\r\n              weather={location.weather}\r\n              clicked={() => props.clicked(location.id)}\r\n            />\r\n          );\r\n        })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Favorites;\r\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport MainHeader from \"../components/MainHeader/MainHeader.layout\";\nimport WeatherDetails from \"../components/Weather/WeatherDetails.layout\";\nimport Favorites from \"../components/Favorites/Favorites.layout\";\nimport { useSelector } from \"react-redux\";\n\nfunction App() {\n  const [currentPage, setCurrentPage] = useState(\"home\");\n  const [selectedLocation, setSelectedLocation] = useState();\n  const locationsInFavorites = useSelector((state) => state.inFavorites);\n\n  const handleNavigation = (navState) => {\n    setCurrentPage(navState);\n  };\n\n  const handleOnClick = (id) => {\n    setCurrentPage(\"home\");\n    const locationsArr = [...locationsInFavorites];\n    const selectedLocation = locationsArr.filter((loc) => loc.id === id);\n    setSelectedLocation(selectedLocation[0]);\n  };\n\n  return (\n    <div className=\"App\">\n      <MainHeader clicked={handleNavigation} currentPage={currentPage} />\n      {currentPage === \"home\" ? (\n        <WeatherDetails location={selectedLocation} />\n      ) : (\n        <Favorites clicked={handleOnClick} />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const favoritesReducer = (state = \"\", action) => {\r\n  switch (action.type) {\r\n    case \"UPDATE_FAVORITES\":\r\n      return [...action.payload];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default favoritesReducer;\r\n","import favoritesReducer from \"./favorites\";\r\nimport { combineReducers } from \"redux\";\r\n\r\nconst allReducers = combineReducers({\r\n  inFavorites: favoritesReducer,\r\n});\r\n\r\nexport default allReducers;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./containers/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport { createStore } from \"redux\";\nimport allReducers from \"./redux/reducers/index\";\nimport { Provider } from \"react-redux\";\n\nconst store = createStore(allReducers, window.__REDUX_DEVTOOLS_EXTENSION__());\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}